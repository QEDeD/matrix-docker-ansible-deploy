---
- name: Trim Matrix Version History
  hosts: "{{ target_host }}"
  gather_facts: true
  vars:
    confirm_trim: "{{ confirm_trim | default('no') }}"
    matrix_history_fact_file: "{{ matrix_history_fact_file | default('matrix_version_history.fact') }}"
    matrix_history_max_entries: "{{ matrix_history_max_entries | default(100) }}"
  tasks:
    - name: Confirm history trimming
      ansible.builtin.fail:
        msg: "History trimming aborted. Use -e 'confirm_trim=yes' to confirm trimming history to {{ matrix_history_max_entries }} entries."
      when: confirm_trim != 'yes'

    - name: Check if unlimited entries is configured
      ansible.builtin.fail:
        msg: "Trimming is not applicable when matrix_history_max_entries is set to 0 (unlimited). Set a positive value to enable trimming."
      when: matrix_history_max_entries | int == 0

    - name: Read current version history
      ansible.builtin.set_fact:
        version_history: "{{ ansible_local[(matrix_history_fact_file | default('matrix_version_history.fact')) | regex_replace('\\.fact$', '')] | default({'changes': [], 'full_history': {}}) }}"
      when: ansible_local is defined and ansible_local[(matrix_history_fact_file | default('matrix_version_history.fact')) | regex_replace('\\.fact$', '')] is defined

    - name: Initialize empty history if not found
      ansible.builtin.set_fact:
        version_history: { "changes": [], "full_history": {} }
      when: version_history is not defined

    - name: Calculate original entry count
      ansible.builtin.set_fact:
        original_count: "{{ version_history.changes | default([]) | length }}"

    - name: Trim changes history to max entries
      ansible.builtin.set_fact:
        trimmed_history: "{{ version_history | combine({'changes': version_history.changes | default([])[:matrix_history_max_entries | int]}) }}"

    - name: Write trimmed history back to fact file
      ansible.builtin.copy:
        content: "{{ trimmed_history | to_nice_json }}"
        dest: "/etc/ansible/facts.d/{{ matrix_history_fact_file }}"
        mode: '0644'
      become: true
      when: version_history.changes | default([]) | length > 0

    - name: Calculate trimmed entry count
      ansible.builtin.set_fact:
        trimmed_count: "{{ trimmed_history.changes | default([]) | length }}"

    - name: Display trimming results
      ansible.builtin.debug:
        msg: "History trimmed from {{ original_count }} to {{ trimmed_count }} entries (max: {{ matrix_history_max_entries }})."
      when: version_history.changes | default([]) | length > 0

    - name: Display no history message
      ansible.builtin.debug:
        msg: "No history found to trim."
      when: version_history.changes | default([]) | length == 0
